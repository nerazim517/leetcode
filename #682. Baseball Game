class Solution {
public:
    int calPoints(vector<string>& operations) {
        vector<int> vec;
        int ans = 0;
        int first,second;
        for(string s:operations)
        {
            int num = 0;
            int p = 1;
            stack<int> st;
            if(s[0]=='C')
            {
                vec.resize(vec.size()-1);
                
            }
            else if(s[0]=='D')
            {
                int z = vec[vec.size()-1]*2;
                vec.push_back(z);
                
            }
            else if(s[0]=='+')
            {
                int z = first+second;
                vec.push_back(z);
                
            }
            else if(s[0]=='-')
            {
                for(int i=1;i<=s.size()-1;i++)
                {
                    st.push(int(int(s[i])-int('0')));
                }
                while(!st.empty())
                {
                    int y = st.top();
                    num+=y*p;
                    st.pop();
                    if(!st.empty())
                        p*=10;
                }
                num*=-1;
                vec.push_back(num);
            }
            else
            {
                for(int i=0;i<=s.size()-1;i++)
                {
                    st.push(int(int(s[i])-int('0')));
                }
                while(!st.empty())
                {
                    int y = st.top();
                    num+=y*p;
                    st.pop();
                    if(!st.empty())
                        p*=10;
                }
                vec.push_back(num);
            }
            if(vec.size()>=1)
            {
                first = vec[vec.size()-1];
            }
            if(vec.size()>=2)
            {
                second = vec[vec.size()-2];
            }
        }
        for(int i:vec)
        {
            ans+= i;
        }
        return ans;
    }
};
