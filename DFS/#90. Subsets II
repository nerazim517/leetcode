class Solution {
public:
    vector<vector<int>> ans;
    vector<int> vec;
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        ans.push_back({});
        dfs(nums,0,nums.size()-1);
        
        return ans;
    }
    void dfs(vector<int>& nums,int k,int n)
    {   
        unordered_map <int,int> mp;
        for(int i=k;i<=n;i++)
        {   
            if(mp[nums[i]]!=0)
                continue;
            else
            {
                mp[nums[i]]++;
                vec.push_back(nums[i]);
                ans.push_back(vec);
                dfs(nums,i+1,n);
                vec.pop_back();
            }
        }
    }
};
