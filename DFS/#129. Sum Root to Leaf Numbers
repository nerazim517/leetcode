/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<char> nums;
    int sumNumbers(TreeNode* root) {
        return dfs(root);
    }
    int dfs(TreeNode* root)
    {   
        if(root==NULL)
        {   
            return 0;
        }
        if((root->left==NULL)&&(root->right==NULL))
        {   
            char c = char(root->val);
            nums.push_back(c);
            int sum = 0;
            int temp =1;
            for(int i=nums.size()-1;i>=0;i--)
            {
                sum += temp*int(nums[i]);
                if(i!=0)
                    temp*=10;
            }
            nums.pop_back();
            return sum;
        }
        char c = char(root->val);
        nums.push_back(c);
        int lef = dfs(root->left);
        int rig = dfs(root->right);
        nums.pop_back();
        return lef+rig;
    }
};
