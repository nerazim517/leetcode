/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        unordered_map <int,ListNode*> mp;
        ListNode* start = head;
        int count = 0;
        
        while(start!=NULL)
        {   
            mp[count] = start;
            start= start->next;
            count++;
        }
        if(count<=1)
            return head;
        
        int index = k%count;
        int rotate = count-index; //這點變成起點
        if(index==0)
            return head;
        head = mp[rotate];
        mp[rotate-1]->next = NULL;
        mp[mp.size()-1]->next = mp[0];
        
        return head;
        
    }
};
