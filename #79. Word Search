class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        bool res = false;
        for(int i=0;i<board.size();i++)
            for(int j=0;j<board[0].size();j++)
            {
                if(board[i][j]==word[0])
                {   
                    char ch = board[i][j];
                    board[i][j] = '*';
                    bool ress =  ((dfs(1,board,word,i+1,j))||(dfs(1,board,word,i-1,j))||(dfs(1,board,word,i,j-1))||(dfs(1,board,word,i,j+1)));
                    board[i][j] = ch;
                    res = (res|ress);
                }
            }
        
        return res;
    }
    bool dfs(int index,vector<vector<char>>& board,string word,int i,int j)
    {   
        
        if(index==word.size())
        {   
            return true;
        }
        if((i<0)||(i>board.size()-1))
            return false;
        if((j<0)||(j>board[0].size()-1))
            return false;
        
        if(word[index]==board[i][j])
        {   
            
            char ch = board[i][j];
            board[i][j] = '*';
            bool res =  ((dfs(index+1,board,word,i+1,j))||(dfs(index+1,board,word,i-1,j))||(dfs(index+1,board,word,i,j-1))||(dfs(index+1,board,word,i,j+1)));
            board[i][j] = ch;
            return res;
        }
        return false;
    }
};
