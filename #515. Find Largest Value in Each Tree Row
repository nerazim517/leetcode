/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    unordered_map <int,int> mp;
    unordered_map <int,bool> mp1;
    int maxx = INT_MIN;
    vector<int> largestValues(TreeNode* root) {
        mp[0] = INT_MIN;
        dfs(root,0);
        vector<int> ans;
        for(int i=0;i<=maxx;i++)
        {
            ans.push_back(mp[i]);
        }
        return ans;
    }
    
    void dfs(TreeNode* root,int k)
    {
        if(root==NULL)
        {
            return;
        }
        maxx = max(maxx,k);
        
        mp[k] = max(mp[k],root->val);
        
        if(mp1[k+1]==false)
        {
            mp[k+1] = INT_MIN;
            mp1[k+1] = true;
        }
        
        dfs(root->left,k+1);
        
        dfs(root->right,k+1);
    }
};
