class Solution {
public:
    vector<int> ans;
    vector<int> lexicalOrder(int n) {
        int count = 0;
        int num = n;
        while(n>0)
        {
            n/=10;
            count++;
        }
        int p = num/pow(10,count-1);
        dfs(1,num,0,count,p,true);
        
        return ans;
    }
    void dfs(int start,int end,int n,int m,int z,bool b)
    {   
        if((end-start<=9)&&(start!=1))
        {
            for(int i=start;i<=end;i++)
                ans.push_back(i);
            return;
        }
        if(start>end)
            return;
        if(n==m)
            return;
        if(b)
        {
            for(int i=start;i<=start+8;i++)
            {   
                if(i>end)
                    break;
                ans.push_back(i);
                dfs(i*10,end,n+1,m,z,false);
            }
        }
        else
        {
            for(int i=start;i<=start+9;i++)
            {   
                ans.push_back(i);
                dfs(i*10,end,n+1,m,z,false);
            }
        }
    }
};
