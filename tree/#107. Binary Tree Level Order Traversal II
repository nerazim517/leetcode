/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> vec;
    queue <TreeNode*> Q;
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        if(root==NULL)
            return {};
        Q.push(root);
        bfs(Q);
        vector<vector<int>>ans;
        for(int i=vec.size()-1;i>=0;i--)
            ans.push_back(vec[i]);
        return ans;
    }
    void bfs(queue<TreeNode*>& Q){
        queue<TreeNode*> QQ;
        vector<int> res;
        while(!Q.empty()){
            TreeNode* temp = Q.front();
            if(temp->left!=NULL){
                QQ.push(temp->left);
            }
            if(temp->right!=NULL){
                QQ.push(temp->right);
            }
            res.push_back(temp->val);
            Q.pop();
        }
        vec.push_back(res);
        if(!QQ.empty())
            bfs(QQ);
    }
    
};
