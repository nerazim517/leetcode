/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> ans;
    vector<int> res;
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        dfs(root,targetSum,0);
        return ans;
    }
    void dfs(TreeNode* root,int target,int sum)
    {   
        if(root==NULL)
        {
            return;
        }
        else if((sum+root->val==target)&&(root->right==NULL)&&(root->left==NULL))
        {   
            res.push_back(root->val);
            ans.push_back(res);
            res.pop_back();
            return;
        }
        else 
        {   
            sum += root->val;
            res.push_back(root->val);
            dfs(root->left,target,sum);
            dfs(root->right,target,sum);
            res.pop_back();
        }
    }
};
