class Solution {
public:
    vector<string> ans;
    vector<string> findAndReplacePattern(vector<string>& words, string pattern) {
        for(int i=0;i<words.size();i++)
        {
            unordered_map<char,char> mp;
            unordered_map<char,bool> c;
            for(int j=0;j<=words[i].size();j++)
            {   
                if(j==words[i].size())
                    ans.push_back(words[i]);
                else if((mp[words[i][j]]==NULL)&&(c[pattern[j]]==false))
                {
                    mp[words[i][j]] = pattern[j];
                    c[pattern[j]] = true;
                }
                else
                {
                    if(mp[words[i][j]]!=pattern[j])
                        break;
                }
            }
        }
        return ans;
    }
    
};
