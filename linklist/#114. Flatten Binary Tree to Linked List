/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    queue<TreeNode*> q;
    void flatten(TreeNode* root) {
        if(root==NULL)
            return;
        dfs(root); 
        q.pop();
        while(!q.empty())
        {
            root->left=NULL;
            root->right = q.front();
            q.pop();
            root = root->right;
        }
        
    }
    void dfs(TreeNode* root)
    {
        if(root==NULL)
            return;
        else{
            cout<<root->val;
            q.push(root);
            dfs(root->left);
            dfs(root->right);
        }
    }
};
