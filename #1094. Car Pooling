class Solution {
public:
    bool carPooling(vector<vector<int>>& trips, int capacity) {
        sort(trips.begin(),trips.end(),[](vector<int> a,vector<int> b){return a[1]<b[1];});
        int c = capacity;
        priority_queue <pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> p;
        for(int i=0;i<trips.size();i++)
        {   
            while(!p.empty())
            {
                
                if(trips[i][1]>=p.top().first)
                {
                    c+=p.top().second;
                    p.pop();
                }
                else
                    break;
            }
            if(c<trips[i][0])
                return false;
            else
            {
                pair<int,int> p0;
                p0.first = trips[i][2];
                p0.second = trips[i][0];
                p.push(p0);
                c-=trips[i][0];
            }
            
        }
        return true;
    }
};
