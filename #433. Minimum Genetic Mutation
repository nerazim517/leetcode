class Solution {
public:
    int minMutation(string start, string end, vector<string>& bank) {
        int ans = dfs(start,end,bank,0);
        return ans==INT_MAX?-1:ans;
    }
    int dfs(string s,string e,vector<string>& b,int c)
    {
        cout<<c;
        int m = INT_MAX;
        if(s==e)
            return c;
        else
        {
            for(int i=0;i<b.size();i++)
            {
                int n = 0;
                for(int j=0;j<8;j++)
                {   
                    if(s[j]!=b[i][j])
                        n++;
                }
                
                if(n>1)
                    continue;
                else if(n==1)
                {
                    string h = s;
                    s=b[i];
                    b.erase(b.begin()+i);
                    m = min(m,dfs(s,e,b,c+1));
                    b.insert(b.begin()+i,s);
                    s = h;
                }
                
            }
            
        }
        return m==INT_MAX?INT_MAX:m;
    }
};
