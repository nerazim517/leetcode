class Solution {
public:
    bool wordPattern(string pattern, string s) {
        unordered_map <char,string> mp;
        unordered_map <string,char> mp2;
        int index = 0;
        for(int i=0;i<s.size();i++)
        {   
            
            if(s[i]==' ')
                continue;
            string ss = "";
            while((i<s.size())&&(s[i]!=' '))
            {
                ss+=s[i];
                i++;
            }
            if(mp[pattern[index]]!="")
            {
                if(mp[pattern[index]]!=ss)
                    return false;
                
                if(mp2[ss]!=pattern[index])
                    return false;
            }
            else
            {   
                if(mp2[ss]!=NULL)
                    return false;
                mp2[ss] = pattern[index];
                mp[pattern[index]]=ss;
            }
            index++;
        }
        
        if(index!=pattern.size())
            return false;
        return true;
    }
};
