class Solution {
public:
    int maxArea(int h, int w, vector<int>& horizontalCuts, vector<int>& verticalCuts) {
        horizontalCuts.push_back(0);
        horizontalCuts.push_back(h);
        verticalCuts.push_back(0);
        verticalCuts.push_back(w);
        
        sort(horizontalCuts.begin(),horizontalCuts.end());
        sort(verticalCuts.begin(),verticalCuts.end());
        
        
        
        int maxh=0;
        int maxv=0;
        for(int i=0;i<horizontalCuts.size()-1;i++)
        {
            int num = horizontalCuts[i+1] - horizontalCuts[i];
            maxh = max(maxh,num);
        }
        for(int i=0;i<verticalCuts.size()-1;i++)
        {
            int num = verticalCuts[i+1] - verticalCuts[i];
            maxv = max(maxv,num);
        }    
          
        return (long)maxh*maxv%1000000007;
    }
};
