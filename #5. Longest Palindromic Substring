class Solution {          //找出s中最長迴文
public:
    string longestPalindrome(string s) {
        
        int max[2] = {0}; //紀錄最長延伸長度 0奇數回文 1偶數回文
        int x = 0 ; //紀錄最長奇數回文中間位置
        int y = 0 ; //紀錄最長偶數回文中間位置
        string pal = "";
        
        for(int i =0;i<s.size();i++)  //每個字母掃一次
        {   
            int n = 1;
            int m = 0;
            
            while(((i-n)>=0)&&(int(s[i-n])==int(s[i+n]))) //奇數回文
            {   
                
                n = n+1;
                if(n-1>max[0])
                {
                    max[0]=n-1;
                    x = i;
                    cout<<max[0]<<x;
                }
            }
            
            int q = 0;
            int e = 0;
            
            while((i-q>=0)&&(int(s[i-q])==int(s[i+1+q])))//偶數回文
            {   
                q = q+1;
                if(q>max[1])
                {
                    max[1] = q;
                    y = i;
                }
                
            }
            
            
        }
        max[1] = max[1]-1;
        
        if(max[0]+1>=max[1]+2) //奇數迴文較長
        {
            for(int i =x-max[0];i<=x+max[0];i++)
                pal = pal+s[i];
            
        } 
        else{  //偶數回文較長
            
            for(int i =y-max[1];i<=y+1+max[1];i++)
                pal = pal+s[i];
        }
    
        return pal;
        
    }
};
