class Solution {
public:
    vector<vector<int>> ans;
    map<vector<int>,bool> m;
    vector<vector<int>> findSubsequences(vector<int>& nums) {
        vector<int> v;
        dfs(nums,v,0,nums.size()-1);
        return ans;
    }
    
    void dfs(vector<int> n,vector<int> v,int start,int end)
    {
        if(v.size()>=2)
        {
            if(m[v]!=true)
            {
                ans.push_back(v);
                m[v] = true;
            }
        }
        for(int i=start;i<=end;i++)
        {
            if(v.size()>0)
            {
                if(n[i]<v[v.size()-1])
                    continue;
            }
            v.push_back(n[i]);
            dfs(n,v,i+1,end);
            v.erase(v.end()-1);
        }
        
    }
};
