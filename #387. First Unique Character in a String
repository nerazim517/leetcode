class Solution {
public:
    int firstUniqChar(string s) {
        string copy = s;
        vector<int> vec(27);
        sort(s.begin(),s.end());
        int ans = 0;
        
        for(int i=0;i<s.size()-1;i++)
        {   
            if(vec[int(s[i])-int('a')]==0)
                vec[int(s[i])-int('a')]++;
            if(s[i]==s[i+1])
                vec[int(s[i])-int('a')]++;
        }
        vec[int(s[s.size()-1]-int('a'))]++;
        
        for(int i=0;i<copy.size();i++)
        {   
            if(vec[int(copy[i])-int('a')]==1)
                return i;
        }
        return -1;
    }
};
-------------------------------------------------------------------------------------
class Solution {
public:
    int firstUniqChar(string s) {
        int start = 1;
        vector<int> vec(27);
        for(int i=0;i<=s.size()-1;i++)
        {   
            if(vec[int(s[i])-int('a')]==0)
                vec[int(s[i])-int('a')]=i+1;
            else
                vec[int(s[i])-int('a')] = INT_MAX;
        }
        
        int ans = INT_MAX;
        
        for(int i=0;i<26;i++)
        {   
            if(vec[i]!=0)
                ans = min(ans,vec[i]);
        }
        if((ans!=INT_MAX)&&(ans!=0))
            return ans-1;
        
        return -1;
    }
};
