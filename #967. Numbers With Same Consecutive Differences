class Solution {
public:
    vector<int> ans;
    vector<int> numsSameConsecDiff(int n, int k) {
        vector<int> vec;
        for(int i=1;i<10;i++)
        {
            vec.push_back(i);
            dfs(n,k,vec,1);
            vec.pop_back();
        }
        return ans;
    }
    
    void dfs(int n,int k,vector<int> vec,int index)
    {
        if(index==n)
        {
            int p = pow(10,n-1);
            int sum = 0;
            for(int i:vec)
            {
                sum+=i*p;
                p/=10;
            }
            ans.push_back(sum);
            return;
        }
        else
        {
            if(vec[vec.size()-1]-k>=0)
            {
                vec.push_back(vec[vec.size()-1]-k);
                dfs(n,k,vec,index+1);
                vec.pop_back();
            }
            if(k!=0)
                if(vec[vec.size()-1]+k<10)
                {
                    vec.push_back(vec[vec.size()-1]+k);
                    dfs(n,k,vec,index+1);
                    vec.pop_back();
                }
        }
        
    }
};
