class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        //live -> 2 and 3 neighbor live then it live ,or it die
        //die -> exactly 3 live neighbor let it live
        int n = board.size(),m = board[0].size();
        cout<<"m="<<m<<"n="<<n<<endl;
        int new_board[n][m];
        for(int i = 0;i<n;i++)
        {   
            int x1 = i-1;
            int x2 = i+1;
            for(int j =0;j<m;j++)
            {
                int live_neighbor = 0, dead_neighbor = 0;
                int y1 = j-1;
                int y2 = j+1;
                
                if(x1>=0)//正上
                {   
                    if(board[x1][j]==1)
                        live_neighbor++;
                    else
                        dead_neighbor++;   
                }
                if(x2<n)//正下
                {   
                    if(board[x2][j]==1)
                        live_neighbor++;
                    else
                        dead_neighbor++;   
                }
                if(y1>=0)//正左
                {   
                    if(board[i][y1]==1)
                        live_neighbor++;
                    else
                        dead_neighbor++;   
                }
                if(y2<m)//正右
                {   
                    if(board[i][y2]==1)
                        live_neighbor++;
                    else
                        dead_neighbor++;   
                }
                if(x1>=0&&y1>=0)//左上
                {   
                    if(board[x1][y1]==1)
                        live_neighbor++;
                    else
                        dead_neighbor++;   
                }
                if(x1>=0&&y2<m)//右上
                {   
                    if(board[x1][y2]==1)
                        live_neighbor++;
                    else
                        dead_neighbor++;   
                }
                if(x2<n&&y1>=0)//左下
                {   
                    if(board[x2][y1]==1)
                        live_neighbor++;
                    else
                        dead_neighbor++;   
                }
                if(x2<n&&y2<m)//右下
                {   
                    if(board[x2][y2]==1)
                        live_neighbor++;
                    else
                        dead_neighbor++;   
                }
                if(board[i][j]==1)
                {
                    if((live_neighbor!=2)&&(live_neighbor!=3))
                    {
                        new_board[i][j]=0;
                    }
                    else
                        new_board[i][j]=1;
                    
                }
                else
                {
                    if(live_neighbor==3)
                        new_board[i][j]=1;
                    else
                        new_board[i][j]=0;
                    
                }
                cout<<"live_neighbor:"<<live_neighbor<<"dead_neighbor:"<<dead_neighbor<<endl;
                cout<<"new_board[i][j]:"<<new_board[i][j]<<endl;
            }
            
            
        }
        
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
                board[i][j]=new_board[i][j];
        
        
    }
};
