class Solution {
public:
    int evalRPN(vector<string>& tokens) {
        stack <int> S;
        for(int i=0;i<tokens.size();i++)
        {
            if((tokens[i][0]!='+')&&((tokens[i][0]!='-')||(tokens[i][1]!=NULL))&&(tokens[i][0]!='*')&&(tokens[i][0]!='/'))
            {    
                int sum = 0;
                int temp = 1;
                bool booll = false;
                for(int j=tokens[i].size()-1;j>=0;j--)
                {   
                    if(tokens[i][j]=='-')
                    {   
                        booll = true;
                        break;
                    }
                    sum += (int(tokens[i][j])-int('0'))*temp;
                    if(j>0)
                        temp*=10;
                }
                if(booll)
                    sum = sum*(-1);
                
                S.push(sum);
            }
            else{
                int right = S.top();
                S.pop();
                int left = S.top();
                S.pop();
                int sum;
                switch(tokens[i][0])
                {  
                    case'+': 
                        sum = left+right;
                        break;
                    case'-':
                        sum = left-right;
                        break;
                    case'*':
                        sum = left*right;
                        break;
                    case'/':
                        sum = left/right;
                        break;
                }   
                S.push(sum);
            }
            
        }
        
        return S.top();
    }
};
