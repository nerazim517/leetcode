class Solution {    //subset sum 變形題
public:
    bool canPartition(vector<int>& nums) {
        int sum = 0;
        for(int i:nums)
        {
            sum+=i;
        }
        if(sum%2!=0)
            return false;
        sum/=2;
        vector<vector<int>> v(nums.size()+1,vector<int>(sum+1));
        for(int i=0;i<=sum;i++)
        {
            v[0][i] = 0;
        }
        for(int i=1;i<=nums.size();i++)
        {
            for(int j = 0;j<=sum;j++)
            {
                if(nums[i-1]>j)
                    v[i][j] = v[i-1][j];
                else
                {
                    v[i][j] = max(v[i-1][j],v[i-1][j-nums[i-1]]+nums[i-1]);
                }
            }
        }
        
        if(v[nums.size()][sum]==sum)
            return true;
        return false;
    }

};
