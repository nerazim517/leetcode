class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m = obstacleGrid.size();
        int n = obstacleGrid[0].size();
        vector<vector<int>> dp(m,vector<int>(n));
        
        if(obstacleGrid[0][0]==0)
            dp[0][0]=1;
    
        for(int i=0;i<m;i++)
            for(int j=0;j<n;j++)
            {
                if(i==0)//設置首行
                {   
                    if(j==0)
                        continue;
                    else if(obstacleGrid[i][j]==1)
                        dp[i][j] = 0;
                    else
                        dp[i][j] = dp[i][j-1];
                }
                else if(j==0)//設置首行
                {   
                    if(i==0)
                        continue;
                    else if(obstacleGrid[i][j]==1)
                        dp[i][j] = 0;
                    else
                        dp[i][j] = dp[i-1][j];
                }
                else
                {
                    if(obstacleGrid[i][j]==1)
                        dp[i][j] = 0;
                    else
                        dp[i][j] = dp[i-1][j] + dp[i][j-1]; 
                }
                
                
                
            }
        
        
        return dp[m-1][n-1];
    }
};
