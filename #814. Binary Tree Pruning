/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* pruneTree(TreeNode* root) {
        TreeNode* dummy = new TreeNode;
        dummy->left = root;
        int a;
        a = dfs(dummy->left,dummy,0);
        if(!a)
            return NULL;
        return dummy->left;
    }
    
    int dfs(TreeNode* root,TreeNode* prev,int direct)//direct 0 = left 1 = right
    {
        if(root==NULL)
            return 0;
        else
        {
            int l,r;
            l = dfs(root->left,root,0);
            r = dfs(root->right,root,1);
            if((!l)&&(!r))
            {
                if(root->val==0)
                {
                    if(direct==0)
                    {
                        prev->left=NULL;
                    }
                    else
                    {
                        prev->right=NULL;
                    }    
                    return 0;
                }
            }
        }
        return 1;
    }
};
