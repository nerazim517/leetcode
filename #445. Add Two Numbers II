/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* dummy = new ListNode;
        vector<int> v1,v2,v3;
        while(l1!=NULL)
        {
            v1.push_back(l1->val);
            l1 = l1->next;
        }
        while(l2!=NULL)
        {
            v2.push_back(l2->val);
            l2 = l2->next;
        }
        int n = v1.size()-v2.size();
        n = abs(n);
        if(v1.size()>v2.size())
        {
            int o = 0;
            for(int i = v2.size()-1;i>=0;i--)
            {
                int u = v1[i+n]+v2[i]+o;
                o = 0;
                if(u>=10)
                {
                    u-=10;
                    o = 1;
                }
                v3.push_back(u);
            }
            for(int i=n-1;i>=0;i--)
            {
                int u = v1[i]+o;
                o = 0;
                if(u>=10)
                {
                    u-=10;
                    o = 1;
                }
                v3.push_back(u);
            }
            if(o==1)
                v3.push_back(1);
        }
        else
        {
            int o = 0;
            for(int i = v1.size()-1;i>=0;i--)
            {
                int u = v2[i+n]+v1[i]+o;
                o = 0;
                if(u>=10)
                {
                    u-=10;
                    o = 1;
                }
                v3.push_back(u);
            }
            for(int i=n-1;i>=0;i--)
            {
                int u = v2[i]+o;
                o = 0;
                if(u>=10)
                {
                    u-=10;
                    o = 1;
                }
                v3.push_back(u);
            }
            if(o==1)
                v3.push_back(1);
        }
        for(int i:v3)
            cout<<i;
        ListNode* now = dummy;
        for(int i = v3.size()-1;i>=0;i--)
        {
            now->next = new ListNode;
            now->next->val = v3[i];
            now = now->next;
        }
        
        
        return dummy->next;
    }
};
